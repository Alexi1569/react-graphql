{"version":3,"sources":["queries/queries.js","components/BookDetails.jsx","components/BookList.jsx","components/AddBook.jsx","App.jsx","index.js"],"names":["getBooksQuery","gql","_templateObject","getAuthorsQuery","_templateObject2","addBookMutation","_templateObject3","getBookQuery","_templateObject4","BookDetails","showBookDetails","book","_this","props","data","react_default","a","createElement","name","genre","author","className","books","map","key","id","console","log","this","Component","graphql","options","variables","bookId","BookList","state","selected","showBook","setState","showBooks","_this$props$data","loading","onClick","e","components_BookDetails","AddBook","authorId","handleInputChange","Object","defineProperty","target","value","handleSubmit","preventDefault","addBook","refetchQueries","query","_this$props$authorsQu","authorsQuery","authors","disabled","onSubmit","placeholder","onChange","type","showAuthors","compose","client","ApolloClient","uri","App","react_apollo_esm","components_AddBook","components_BookList","ReactDOM","render","App_App","document","getElementById"],"mappings":"+/BAEO,IAAMA,EAAgBC,YAAHC,KASbC,EAAkBF,YAAHG,KASfC,EAAkBJ,YAAHK,KASfC,EAAeN,YAAHO,KCxBnBC,6MACJC,gBAAkB,WAAM,IACdC,EAASC,EAAKC,MAAMC,KAApBH,KAER,OAAIA,EAEAI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKN,EAAKO,MACVH,EAAAC,EAAAC,cAAA,SAAIN,EAAKQ,OACTJ,EAAAC,EAAAC,cAAA,SAAIN,EAAKS,OAAOF,MAChBH,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,MAAII,UAAU,eACXV,EAAKS,OAAOE,MAAMC,IAAI,SAAAZ,GACrB,OAAOI,EAAAC,EAAAC,cAAA,MAAIO,IAAKb,EAAKc,IAAKd,EAAKO,UAOlCH,EAAAC,EAAAC,cAAA,wGAKP,OADAS,QAAQC,IAAIC,KAAKf,OACVE,EAAAC,EAAAC,cAAA,OAAKQ,GAAG,gBAAgBG,KAAKlB,0BAzBdmB,aA6BXC,cAAQvB,EAAc,CACnCwB,QAAS,SAAAlB,GACP,MAAO,CACLmB,UAAW,CACTP,GAAIZ,EAAMoB,WAJHH,CAQZrB,GCpCGyB,6MACJC,MAAQ,CACNC,SAAU,QAGZC,SAAW,SAAAZ,GACTb,EAAK0B,SAAS,CACZF,SAAUX,OAIdc,UAAY,WAAM,IAAAC,EACW5B,EAAKC,MAAMC,KAA9B2B,EADQD,EACRC,QAASnB,EADDkB,EACClB,MAEjB,OAAImB,EACK1B,EAAAC,EAAAC,cAAA,yBAGFK,EAAMC,IAAI,SAAAZ,GACf,OACEI,EAAAC,EAAAC,cAAA,MAAIyB,QAAS,SAAAC,GAAC,OAAI/B,EAAKyB,SAAS1B,EAAKc,KAAKD,IAAKb,EAAKc,IACjDd,EAAKO,iFAOZ,OACEH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIQ,GAAG,aAAaG,KAAKW,aACxBX,KAAKO,MAAMC,SACVrB,EAAAC,EAAAC,cAAC2B,EAAD,CAAaX,OAAQL,KAAKO,MAAMC,WAC9B,aAjCWP,aAuCRC,cAAQ9B,EAAR8B,CAAuBI,WCpChCW,6MACJV,MAAQ,CACNjB,KAAM,GACNC,MAAO,GACP2B,SAAU,MAmBZC,kBAAoB,SAAAJ,GAClB/B,EAAK0B,SAALU,OAAAC,EAAA,EAAAD,CAAA,GACGL,EAAEO,OAAOhC,KAAOyB,EAAEO,OAAOC,WAI9BC,aAAe,SAAAT,GACbA,EAAEU,iBAEFzC,EAAKC,MAAMyC,QAAQ,CACjBtB,UAAW,CACTd,KAAMN,EAAKuB,MAAMjB,KACjBC,MAAOP,EAAKuB,MAAMhB,MAClB2B,SAAUlC,EAAKuB,MAAMW,UAEvBS,eAAgB,CACd,CACEC,MAAOxD,MAKbY,EAAK0B,SAAS,CACZpB,KAAM,GACNC,MAAO,GACP2B,SAAU,mFAzCA,IAAAW,EACiB7B,KAAKf,MAAM6C,aAAhCjB,EADIgB,EACJhB,QAASkB,EADLF,EACKE,QAEjB,OAAIlB,EACK1B,EAAAC,EAAAC,cAAA,UAAQ2C,UAAQ,GAAhB,cAGFD,EAAQpC,IAAI,SAAAH,GACjB,OACEL,EAAAC,EAAAC,cAAA,UAAQO,IAAKJ,EAAOK,GAAI0B,MAAO/B,EAAOK,IACnCL,EAAOF,yCAoCd,OACEH,EAAAC,EAAAC,cAAA,QAAMQ,GAAG,WAAWoC,SAAUjC,KAAKwB,cACjCrC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACbN,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SACE6C,YAAY,OACZC,SAAUnC,KAAKmB,kBACfI,MAAOvB,KAAKO,MAAMjB,KAClBA,KAAK,OACL8C,KAAK,UAGTjD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACbN,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SACE6C,YAAY,QACZC,SAAUnC,KAAKmB,kBACfI,MAAOvB,KAAKO,MAAMhB,MAClBD,KAAK,QACL8C,KAAK,UAGTjD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACbN,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UACEC,KAAK,WACLiC,MAAOvB,KAAKO,MAAMW,SAClBiB,SAAUnC,KAAKmB,mBAEfhC,EAAAC,EAAAC,cAAA,+BACCW,KAAKqC,gBAGVlD,EAAAC,EAAAC,cAAA,2BAtFcY,aA4FPqC,cACbpC,YAAQ3B,EAAiB,CAAEe,KAAM,iBACjCY,YAAQzB,EAAiB,CAAEa,KAAM,YAFpBgD,CAGbrB,GCjGIsB,EAAS,IAAIC,IAAa,CAC9BC,IAAK,8BAGcC,mLAEjB,OACEvD,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAgBJ,OAAQA,GACtBpD,EAAAC,EAAAC,cAAA,OAAKQ,GAAG,QACNV,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACuD,EAAD,MACAzD,EAAAC,EAAAC,cAACwD,EAAD,eAPuB5C,aCNjC6C,IAASC,OAAO5D,EAAAC,EAAAC,cAAC2D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.0baf1a3f.chunk.js","sourcesContent":["import { gql } from 'apollo-boost';\r\n\r\nexport const getBooksQuery = gql`\r\n  {\r\n    books {\r\n      name\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getAuthorsQuery = gql`\r\n  {\r\n    authors {\r\n      name\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const addBookMutation = gql`\r\n  mutation($name: String!, $genre: String!, $authorId: ID!) {\r\n    addBook(name: $name, genre: $genre, authorId: $authorId) {\r\n      name\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const getBookQuery = gql`\r\n  query($id: ID!) {\r\n    book(id: $id) {\r\n      id\r\n      name\r\n      genre\r\n      author {\r\n        id\r\n        name\r\n        age\r\n        books {\r\n          id\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { Component } from 'react';\r\nimport { graphql } from 'react-apollo';\r\n\r\nimport { getBookQuery } from '../queries/queries';\r\n\r\nclass BookDetails extends Component {\r\n  showBookDetails = () => {\r\n    const { book } = this.props.data;\r\n\r\n    if (book) {\r\n      return (\r\n        <div>\r\n          <h2>{book.name}</h2>\r\n          <p>{book.genre}</p>\r\n          <p>{book.author.name}</p>\r\n          <p>All Books by this author:</p>\r\n          <ul className=\"other-books\">\r\n            {book.author.books.map(book => {\r\n              return <li key={book.id}>{book.name}</li>;\r\n            })}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return <div>No book selected</div>;\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return <div id=\"book-details\">{this.showBookDetails()}</div>;\r\n  }\r\n}\r\n\r\nexport default graphql(getBookQuery, {\r\n  options: props => {\r\n    return {\r\n      variables: {\r\n        id: props.bookId\r\n      }\r\n    };\r\n  }\r\n})(BookDetails);\r\n","import React, { Component } from 'react';\r\nimport { graphql } from 'react-apollo';\r\n\r\nimport BookDetails from '../components/BookDetails';\r\nimport { getBooksQuery } from '../queries/queries';\r\n\r\nclass BookList extends Component {\r\n  state = {\r\n    selected: null\r\n  };\r\n\r\n  showBook = id => {\r\n    this.setState({\r\n      selected: id\r\n    });\r\n  };\r\n\r\n  showBooks = () => {\r\n    const { loading, books } = this.props.data;\r\n\r\n    if (loading) {\r\n      return <div>Loading...</div>;\r\n    }\r\n\r\n    return books.map(book => {\r\n      return (\r\n        <li onClick={e => this.showBook(book.id)} key={book.id}>\r\n          {book.name}\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul id=\"book-list\">{this.showBooks()}</ul>\r\n        {this.state.selected ? (\r\n          <BookDetails bookId={this.state.selected} />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default graphql(getBooksQuery)(BookList);\r\n","import React, { Component } from 'react';\r\nimport { graphql, compose } from 'react-apollo';\r\n\r\nimport {\r\n  getAuthorsQuery,\r\n  getBooksQuery,\r\n  addBookMutation\r\n} from '../queries/queries';\r\n\r\nclass AddBook extends Component {\r\n  state = {\r\n    name: '',\r\n    genre: '',\r\n    authorId: ''\r\n  };\r\n\r\n  showAuthors() {\r\n    const { loading, authors } = this.props.authorsQuery;\r\n\r\n    if (loading) {\r\n      return <option disabled>Loading...</option>;\r\n    }\r\n\r\n    return authors.map(author => {\r\n      return (\r\n        <option key={author.id} value={author.id}>\r\n          {author.name}\r\n        </option>\r\n      );\r\n    });\r\n  }\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.addBook({\r\n      variables: {\r\n        name: this.state.name,\r\n        genre: this.state.genre,\r\n        authorId: this.state.authorId\r\n      },\r\n      refetchQueries: [\r\n        {\r\n          query: getBooksQuery\r\n        }\r\n      ]\r\n    });\r\n\r\n    this.setState({\r\n      name: '',\r\n      genre: '',\r\n      authorId: ''\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form id=\"add-book\" onSubmit={this.handleSubmit}>\r\n        <div className=\"field\">\r\n          <label>Book name:</label>\r\n          <input\r\n            placeholder=\"Name\"\r\n            onChange={this.handleInputChange}\r\n            value={this.state.name}\r\n            name=\"name\"\r\n            type=\"text\"\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Genre:</label>\r\n          <input\r\n            placeholder=\"Genre\"\r\n            onChange={this.handleInputChange}\r\n            value={this.state.genre}\r\n            name=\"genre\"\r\n            type=\"text\"\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Author:</label>\r\n          <select\r\n            name=\"authorId\"\r\n            value={this.state.authorId}\r\n            onChange={this.handleInputChange}\r\n          >\r\n            <option>Select author</option>\r\n            {this.showAuthors()}\r\n          </select>\r\n        </div>\r\n        <button>+</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  graphql(getAuthorsQuery, { name: 'authorsQuery' }),\r\n  graphql(addBookMutation, { name: 'addBook' })\r\n)(AddBook);\r\n","import React, { Component } from 'react';\r\nimport ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from 'react-apollo';\r\n\r\nimport BookList from './components/BookList';\r\nimport AddBook from './components/AddBook';\r\n\r\nconst client = new ApolloClient({\r\n  uri: 'http://localhost:4000/api'\r\n});\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <ApolloProvider client={client}>\r\n        <div id=\"main\">\r\n          <h1>Reading List</h1>\r\n          <AddBook />\r\n          <BookList />\r\n        </div>\r\n      </ApolloProvider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}